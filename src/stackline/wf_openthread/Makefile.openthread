include config.inc

CPP=g++
LDFLAGS=-fPIC -lpthread
CFLAGS=-Wall

ifeq ($(REL),debug)
CFLAGS+=-g
endif

ifneq ("$(wildcard $(STACKLINE_OPENTHREAD))", "")
WFOTDIR=src/stackline/wf_openthread
SRC=$(WFOTDIR)/wfot_main.c $(WFOTDIR)/wfot_radio_wrapper.c $(WFOTDIR)/pcap_util.c $(WFOTDIR)/wfot_pty_handler.c $(WFOTDIR)/wfot_cmd_handler.c
WFOTBIN=$(BINDIR)/wf_openthread

OTLIBPATH=$(STACKLINE_OPENTHREAD)/build/x86_64-unknown-linux-gnu
OTLIBNAME=openthread-posix openthread-platform-utils openthread-cli-ftd openthread-ftd mbedcrypto openthread-posix openthread-diag
OTLIBS=$(addprefix -l,$(OTLIBNAME))
CFLAGS+=-Isrc
LDFLAGS+=-L$(BINDIR) -lwf_commline -lopenthread-ftd
endif

COMMA:=,
#Whitefield OpenThread(OT) stackline adpater overrides foll OT APIs to work out simulation.
#This way I don't need to add Whitefield as a platform in OpenThread. Thus
#works out of box for any openthread version (unless ofcourse there are changes
#in these APIs itself).
OVERRIDE_API=platformRadioInit otPlatRadioTransmit otPlatRadioGetIeeeEui64 otPlatRadioSetExtendedAddress \
                otPlatRadioSetShortAddress otPlatRadioEnable otPlatRadioDisable otPlatRadioIsEnabled    \
                otPlatRadioReceive otPlatRadioReceiveDone otPlatRadioTxStarted otPlatRadioTxDone        \
                otPlatRadioGetCaps platformRadioDeinit otPlatUartSend platformUartUpdateFdSet
WRAP_LIST=$(addprefix -Wl$(COMMA)-wrap$(COMMA),$(OVERRIDE_API))

all: $(WFOTBIN)

$(OTLIBPATH):
	cd $(STACKLINE_OPENTHREAD); ./bootstrap && ./configure && make distclean && make -f examples/Makefile-posix; cd -

$(WFOTBIN): $(OTLIBPATH) $(SRC)
	$(CPP) $(CFLAGS) $(LDFLAGS) -o $(WFOTBIN) -I$(STACKLINE_OPENTHREAD)/include -I$(OTLIBPATH)/include -I$(STACKLINE_OPENTHREAD)/src/core -I$(STACKLINE_OPENTHREAD)/examples/platforms $(SRC) -L$(OTLIBPATH)/examples/platforms/posix -L$(OTLIBPATH)/src/core -L$(OTLIBPATH)/examples/platforms/utils -L$(OTLIBPATH)/src/cli -L$(OTLIBPATH)/third_party/mbedtls -L$(OTLIBPATH)/src/diag $(OTLIBS) $(WRAP_LIST) $(LDFLAGS)

clean:
	@rm -f $(WFOTBIN)
